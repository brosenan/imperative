'/bootstrap':signature(if(Cond,Then)::command,[Cond::expr(bool),Then::command]).
'/bootstrap':projection(if(Cond,Then)::command,'/bootstrap':vert(['/bootstrap':horiz(['/bootstrap':label(!if),'/bootstrap':vis(Cond::expr(bool)),'/bootstrap':label(! (:))]),'/bootstrap':horiz(['/bootstrap':label(!'    '),'/bootstrap':vis(Then::command)])])).
'/util':behavior(if(Cond,Then)::command,!'executes Then if Cond holds', (exec(if(eq(const(2),const(2),'/bootstrap':number),print(const(!yes),'/bootstrap':string)),_,_,[],[],[],Out),'/util':assertEqual(Out,[!yes::'/bootstrap':string],'/bootstrap':list('/bootstrap':typedTerm)))).
'/util':behavior(if(Cond,Then)::command,!'does nothing if Cond does not hold', (exec(if(eq(const(2),const(3),'/bootstrap':number),print(const(!yes),'/bootstrap':string)),Sigma1,Sigma2,InIn,InOut,OutIn,OutOut),'/util':assertEqual(Sigma1,Sigma2,state),'/util':assertEqual(InOut,InIn,'/bootstrap':list('/bootstrap':typedTerm)),'/util':assertEqual(OutOut,OutIn,'/bootstrap':list('/bootstrap':typedTerm)))).
exec(if(Cond,Then),Sigma1,Sigma2,InIn,InOut,OutIn,OutOut):-builtin:if(eval(Cond,Sigma1,bool,true),exec(Then,Sigma1,Sigma2,InIn,InOut,OutIn,OutOut), (Sigma2::state=Sigma1::state,InOut::'/bootstrap':list('/bootstrap':typedTerm)=InIn::'/bootstrap':list('/bootstrap':typedTerm),OutOut::'/bootstrap':list('/bootstrap':typedTerm)=OutIn::'/bootstrap':list('/bootstrap':typedTerm))).
